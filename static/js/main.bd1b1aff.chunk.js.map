{"version":3,"sources":["components/Period/index.tsx","components/Collapsable/index.tsx","components/Section/index.tsx","components/Jobs/index.tsx","components/Languages/index.tsx","components/Education/index.tsx","components/PersonalInfo/index.tsx","cv/Soso/index.tsx","components/Skills/Skill.tsx","components/Skills/index.tsx","components/CvComponent/index.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["PeriodComponent","period","className","format","dateFrom","dateTo","Collapsable","children","collapsedContent","useState","collapsed","setCollapsed","arrowIcon","faMinus","faPlus","onClick","icon","Section","title","Jobs","projects","jobs","flatMap","job","map","project","companyName","company","location","renderTitle","role","renderContent","description","scope","length","responsibilities","resp","stack","Languages","languages","language","name","listening","reading","spokenInteraction","spokenProduction","writing","EducationComponent","education","edu","faculty","degree","university","PersonalInfoComponent","personalInfo","src","imageUrl","fullName","faMapMarkerAlt","address","faMobileAlt","phoneNo","faEnvelope","email","skypeId","personalWebsite","href","linkedInUrl","githubUrl","position","summary","lykke","Date","amazon","aurea","undefined","window","origin","skills","skill","subskills","SkillComponent","subskill","SkillList","CvComponent","useEffect","document","App","theme","soso","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bd1b1aff.chunk.js","sourcesContent":["import Moment from \"react-moment\";\r\nimport { Period } from \"../../cv/Period\";\r\nimport \"./Period.scss\"\r\n\r\nexport default function PeriodComponent({ period }: PeriodProps) {\r\n    return <div className=\"period-component\">\r\n        <Moment format=\"MMM YYYY\">{period.dateFrom}</Moment>\r\n        -\r\n        {period.dateTo ? <Moment format=\"MMM YYYY\">{period.dateTo}</Moment> : \"Today\"}\r\n    </div>\r\n}\r\n\r\ninterface PeriodProps {\r\n    period: Period;\r\n}","import { useState } from \"react\";\r\nimport \"./Collapsable.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function Collapsable({ children, collapsedContent }: CollapsableProps) {\r\n    const [collapsed, setCollapsed] = useState(false);\r\n\r\n    let arrowIcon = faMinus;\r\n    if (collapsed) {\r\n        arrowIcon = faPlus;\r\n    }\r\n\r\n    return <div className=\"collapsable\">\r\n        <div className=\"collapsed-content\">\r\n            <div className={\"toggle-button\" + (collapsed ? \" collapsed\" : \"\")} onClick={() => setCollapsed(!collapsed)}>\r\n                <FontAwesomeIcon icon={arrowIcon} />\r\n            </div>\r\n            {collapsedContent}\r\n        </div>\r\n\r\n        {!collapsed && <>\r\n            <div className=\"start\">{\"{\"}</div>\r\n            <div className=\"expanded-content\" >\r\n\r\n                {children}\r\n            </div>\r\n            <div className=\"end\">{\"}\"}</div>\r\n        </>}\r\n        {collapsed && <div className=\"content-hidden\" onClick={() => setCollapsed(false)}>\r\n            <span className=\"start\">{\"{\"}</span> ... <span className=\"end\">{\"}\"}</span>\r\n        </div>}\r\n\r\n    </div>\r\n}\r\n\r\ninterface CollapsableProps {\r\n    collapsedContent: React.ReactNode;\r\n    children: React.ReactNode;\r\n}\r\n\r\n\r\n\r\nfunction collapseBehavior() {\r\n    // stuff\r\n    // stuff\r\n    // stuff\r\n    // stuff\r\n    // stuff\r\n    // stuff\r\n    // stuff\r\n    // stuff\r\n    // stuff\r\n    // stuff\r\n    // stuff\r\n}","import Collapsable from \"../Collapsable\";\r\nimport \"./Section.scss\";\r\n\r\nexport default function Section({ title, children }: SectionProps) {\r\n    return <div className=\"section\">\r\n        <Collapsable collapsedContent={<div className=\"section-title\">{title}</div>}>\r\n            <div className=\"section-content\">\r\n                {children}\r\n            </div>\r\n        </Collapsable>\r\n    </div>\r\n}\r\n\r\ninterface SectionProps {\r\n    title: React.ReactNode;\r\n    children: React.ReactNode\r\n}","import { Job, Project } from \"../../cv/job\";\r\nimport \"./Jobs.scss\";\r\nimport PeriodComponent from \"../Period\";\r\nimport Section from \"../Section\";\r\n\r\n\r\n\r\nexport default function Jobs({ jobs }: JobsProps) {\r\n    type projectWithJob = Project & { companyName: string, location: string }\r\n    const projects = jobs\r\n        .flatMap(job =>\r\n            job.projects.map(project => ({ ...project, companyName: job.company, location: job.location })));\r\n\r\n    function renderTitle(project: projectWithJob) {\r\n        return <div className=\"job-title\">\r\n            <PeriodComponent period={project.period} />\r\n            <div className=\"role\">\r\n                {project.role}\r\n            </div>\r\n            <div>\r\n                <div className=\"company-name\">\r\n                    {project.companyName}\r\n                </div>\r\n                <div className=\"location\">\r\n                    (<span>{project.location}</span>)\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    function renderContent(project: projectWithJob) {\r\n        return <div className=\"job-content\">\r\n            <p className=\"description\">\r\n                {project.description}\r\n            </p>\r\n            {project.scope && project.scope.length > 0 && (<p className=\"scope-list\">\r\n                <span>Scope: </span>\r\n                {project.scope.map(scope => <span>{scope}; </span>)}\r\n            </p>)}\r\n            {project.responsibilities && project.responsibilities.length > 0 && <p className=\"responsibilities\">\r\n                <span>Responsibilities: </span>\r\n                {project.responsibilities.map(resp => <span> {resp}; </span>)}\r\n            </p>}\r\n            {project.stack.length > 0 && <p className=\"stack\">\r\n                <span>Stack:</span>  {project.stack.map(stack => <span className=\"stack-item\">{stack}; </span>)}\r\n            </p>}\r\n        </div>\r\n    }\r\n\r\n    return <div className=\"jobs\">\r\n        <Section title=\"Work Experience\">\r\n            <div className=\"two-columns\">\r\n                {projects.map(project => <div className=\"job-item\">\r\n                    {project.description ? <Section title={renderTitle(project)}>\r\n                        {renderContent(project)}\r\n                    </Section> : renderTitle(project)}\r\n\r\n                </div>)}\r\n            </div>\r\n\r\n        </Section>\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\n\r\ninterface JobsProps {\r\n    jobs: Job[]\r\n}","import { Language } from \"../../cv/language\";\r\nimport Collapsable from \"../Collapsable\";\r\nimport Section from \"../Section\";\r\nimport \"./Languages.scss\";\r\n\r\nexport default function Languages({ languages }: LanguagesProps) {\r\n    return <div className=\"languages\">\r\n        <Section title=\"Languages\">\r\n            <div className=\"languages-content\">\r\n                <table>\r\n                    <thead>\r\n                        <th></th>\r\n                        <th>Listening</th>\r\n                        <th>Reading</th>\r\n                        <th>Spoken interaction</th>\r\n                        <th>Spoken production</th>\r\n                        <th>Writing</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {languages.map(language => <tr>\r\n                            <td className=\"language-name\">{language.name}</td>\r\n                            <td>{language.listening}</td>\r\n                            <td>{language.reading}</td>\r\n                            <td>{language.spokenInteraction}</td>\r\n                            <td>{language.spokenProduction}</td>\r\n                            <td>{language.writing}</td>\r\n                        </tr>)}\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"clarification\">\r\n                    Levels: A1 and A2: Basic user - B1 and B2: Independent user - C1 and C2: Proficient user\r\n                </div>\r\n            </div>\r\n        </Section>\r\n    </div>\r\n}\r\n\r\ninterface LanguagesProps {\r\n    languages: Language[]\r\n}","import { Education } from \"../../cv/education\";\r\nimport \"./Education.scss\";\r\nimport Collapsable from \"../Collapsable\";\r\nimport PeriodComponent from \"../Period\";\r\nimport Section from \"../Section\";\r\n\r\nexport default function EducationComponent({ education }: EducationProps) {\r\n    return <div className=\"education\">\r\n        <Section title=\"Education\">\r\n            <div className=\"education-content\">\r\n                {education.map(edu => <div className=\"education-item\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 col-sm-4\">\r\n                            <PeriodComponent period={edu.period} />\r\n                        </div>\r\n                        <div className=\"col-md-8 col-sm-8\">\r\n                            <div className=\"degree\">\r\n                                {edu.faculty} - {edu.degree}\r\n                            </div>\r\n                            <span>\r\n                                <span className=\"university\">{edu.university}</span> <span className=\"location\">({edu.location})</span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>)}\r\n            </div>\r\n        </Section>\r\n    </div>\r\n}\r\ninterface EducationProps {\r\n    education: Education[]\r\n}","import PersonalInfo from \"../../cv/personalInfo\";\r\nimport \"./PersonalInfo.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarkerAlt, faEnvelope, faMobileAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\n\r\nexport default function PersonalInfoComponent({ personalInfo }: PersonalInfoProps) {\r\n\r\n    return <div className=\"personal-info\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4 col-sm-4 col-xs-4\">\r\n                <div className=\"image-section\">\r\n                    <img src={personalInfo.imageUrl} />\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-8 col-sm-8  col-xs-8\">\r\n                <div className=\"section-title\">Personal Information</div>\r\n                <div className=\"full-name\">{personalInfo.fullName}</div>\r\n                <div className=\"info-line\">\r\n                    <FontAwesomeIcon icon={faMapMarkerAlt} />{personalInfo.address}\r\n                </div>\r\n                <div className=\"info-line\">\r\n                    <FontAwesomeIcon icon={faMobileAlt} />{personalInfo.phoneNo}\r\n                </div>\r\n                <div className=\"info-line\">\r\n                    <FontAwesomeIcon icon={faEnvelope} />{personalInfo.email}\r\n                </div>\r\n                {personalInfo.skypeId && <div className=\"info-line\">\r\n                    <span className=\"fa fa-skype\" />{personalInfo.skypeId}\r\n                </div>}\r\n                {personalInfo.personalWebsite && <div className=\"info-line\">\r\n                    <span className=\"fa fa-globe\" /><a href={personalInfo.personalWebsite}>{personalInfo.personalWebsite}</a>\r\n                </div>}\r\n                {personalInfo.linkedInUrl && <div className=\"info-line\">\r\n                    <span className=\"fa fa-linkedin\" /><a href={personalInfo.linkedInUrl}>{personalInfo.linkedInUrl}</a>\r\n                </div>}\r\n                {personalInfo.githubUrl && <div className=\"info-line\">\r\n                    <span className=\"fa fa-github\" /><a href={personalInfo.githubUrl}>{personalInfo.githubUrl}</a>\r\n                </div>}\r\n\r\n                <div>\r\n                    <span className=\"position-title\">Position </span> <span className=\"position\">{personalInfo.position}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            {personalInfo.summary && <div className=\"summary\">\r\n                <div className=\"section-title\">Summary</div>\r\n                <div className=\"summary-text\">{personalInfo.summary}</div>\r\n            </div>}\r\n\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\ninterface PersonalInfoProps {\r\n    personalInfo: PersonalInfo\r\n}","import { Education } from \"../education\"\r\nimport { Job } from \"../job\"\r\nimport { Language } from \"../language\"\r\nimport PersonalInfo from \"../personalInfo\"\r\nimport Skill from \"../skill\"\r\n\r\nconst lykke: Job = {\r\n    company: \"Lykke\",\r\n    location: \"Remote\",\r\n    projects: [\r\n        {\r\n            role: \"C# Architect\",\r\n            period: { dateFrom: new Date(2018, 3, 1), dateTo: new Date(2019, 4, 1) },\r\n            description: \"I was member of integrations team. Our focus was to adapt Lykke's existing margin trading platform to external customer's needs. We wrote wide range of services.\",\r\n            responsibilities: [\r\n                \"Design and development of most services and code review\",\r\n                \"Onboarding new developers by explaining domain, mentoring, existing components, team coding conventions and workflow\",\r\n                \"I was scrum master (for 3 months)\"],\r\n            scope: [\r\n                \"Transforming/decorating data coming from one component and feeding it to another (via http calls, via rabbit exchanges/queues or via tcp sockets)\",\r\n                \"Producing reports for customers\",\r\n                \"Monitoring activities of system and pushing them to customer\",\r\n                \"Managing complex workflows\"\r\n            ],\r\n            stack: [\r\n                \"ReactJs\", \"ASP.NET core\", \"RabbitMq\", \"SignalR\", \"MsSql\"\r\n            ]\r\n        },\r\n\r\n        {\r\n            role: \"C# Architect / Team Lead\",\r\n            period: { dateFrom: new Date(2017, 1, 1), dateTo: new Date(2018, 3, 1) },\r\n            description: <>I with my team have designed and implemented high frequency margin trading platform with <b>CQRS</b> and\r\n                <b>Event Sourcing</b> using <b>Apache Kafka</b> as event store, <b>MongoDb</b> as storage for snapshots of aggregates,\r\n                <b>Redis/Mongo/Elasticsearch</b> for projections, asp.net core mvc for http endpoints, wamp for server to client communication and React on FE side.</>,\r\n            responsibilities: [\r\n                \"With help of BAs, I've modeled domain\",\r\n                <><b>Wrote event sourcing framework</b> for internal usage</>,\r\n                \"Explained co-workers business, explained design of system\",\r\n                \"Established coding and testing practices\",\r\n                \"Actively reviewed Pull Requests\",\r\n                \"Distributed the work\",\r\n                \"Implemented massive amount of features\"\r\n            ],\r\n            scope: [],\r\n            stack: [\r\n                <b>CQRS</b>, <b>Event Sourcing</b>, \"Apache Kafka\", \"MongoDb\", \"Redis\", \"ElasticSearch\",\r\n                \"ReactJs\", \"ASP.net core mvc\", \"wamp\"\r\n            ]\r\n        },\r\n\r\n        {\r\n            role: \"C# Engineer\",\r\n            period: { dateFrom: new Date(2016, 8, 1), dateTo: new Date(2017, 1, 1) },\r\n            description: \"I created reporting application. It used background jobs to pull data periodically from multiple sources and form materialized views.\",\r\n            stack: [\"Azure Table Storage\", \"Asp.net core mvc with razor\", \"jquery\"],\r\n            responsibilities: [],\r\n            scope: []\r\n        },\r\n    ]\r\n}\r\n\r\nconst amazon: Job = {\r\n    company: \"Amazon\",\r\n    location: \"Luxembourg, Luxembourg\",\r\n    projects: [\r\n        {\r\n            role: \"Software Development Engineer\",\r\n            description: <>\r\n                <p>I was member of dVat team, which was focused on rethinking and redesigning of vat calculation system.\r\n                    I’ve designed a microservice, which consumes messages from sqs, sends request to dependent service and writes result in Dynamo DB.</p>\r\n                <p>I also wrote front end for internal tool to query data about order movement.</p>\r\n            </>,\r\n            responsibilities: [\"Analysis of problem at hand.\",\r\n                \"Analysis of metrics\",\r\n                \"Designing microservice\",\r\n                \"Writing supporting documentation\",\r\n                \"Estimation of cost\",\r\n                \"Creation of pipelines for all environment stages\",\r\n                \"Implemention of microservice\",\r\n                \"Negotiation with dependancy teams\"],\r\n            stack: [\"EC2\", \"ECS\", \"AWS SQS\", \"DynamoDb\", \"AWS Lambda\", <b>React/Redux</b>, \"AWS s3 bucket\",\r\n                \"Coral (internal java framework for creating web service)\", \"datapath (internal platform for precomputation and joining key-value tables)\"],\r\n            scope: [],\r\n            period: { dateFrom: new Date(2019, 10, 1), dateTo: new Date(2021, 1, 1) }\r\n        }\r\n    ]\r\n}\r\n\r\nconst aurea: Job = {\r\n    company: \"Aurea Software\",\r\n    location: \"Remote\",\r\n    projects: [\r\n        {\r\n            description: 'Our team was called \"Code cleanup\". We were using code analysis tools to refactor existing code, improve unit test coverage and fix code smells.',\r\n            stack: [\"SonarCube\", \"C#\", \"Java\"],\r\n            period: { dateFrom: new Date(2016, 4, 1), dateTo: new Date(2016, 6, 1) },\r\n            role: \"C# Engineer\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst topTal: Job = {\r\n    company: \"Toptal\",\r\n    location: \"remote\",\r\n    projects: [\r\n        {\r\n            description: <><b>I am proud member of Toptal since 2019. </b>\r\n                Toptal is an exclusive network of the top freelance software developers, designers, finance experts, product managers, and project managers in the world.\r\n                Top companies hire Toptal freelancers for their most important projects. </>,\r\n            period: { dateFrom: new Date(2019, 6, 1), dateTo: undefined },\r\n            role: \"Freelance Software Developer\",\r\n            stack: [],\r\n        },\r\n\r\n    ]\r\n}\r\n\r\nconst altaSoftware: Job = {\r\n    company: \"Alta Software\",\r\n    location: \"Tbilisi, Georgia\",\r\n    projects: [\r\n        {\r\n            description: \"Worked on development of Internet Bank, which was launched in 3 local banks.\",\r\n            period: { dateFrom: new Date(2015, 9, 1), dateTo: new Date(2016, 3, 1) },\r\n            stack: [\"Asp.net MVC with razor\", \"bootstrap\", \"jquery\", \"WCF\", \"ADO.NET\", \"MsSql\"],\r\n            role: \".Net Developer\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst georgianPost: Job = {\r\n    company: \"Georgian Post\",\r\n    location: \"Tbilisi, Georgia\",\r\n    projects: [\r\n        {\r\n            period: { dateFrom: new Date(2013, 11, 1), dateTo: new Date(2015, 10, 1) },\r\n            description: <>\r\n                <div>Worked on maintenance and adding new features to existing system which implied WinForms applications with WCF services as back end and Oracle as Database.\r\n                    Also few Asp.Net Web applications and Mobile client for Pocket PC (Compact Framework).\r\n                    Developed big range of Asp.Net MVC Applications for internal usage.\r\n                    Worked on developing new web based postal system. Wrote new client for Pocket PC.\r\n                    Worked on integration with IPS (International Post System). </div>\r\n                <div>Created DataGrid component for razor, which had <b>server side pagination and filtration</b>. </div>\r\n            </>,\r\n            role: \".Net Developer\",\r\n            stack: [\"WCF\", \"ASP.NET MVC with razor\", \"bootstrap\", \"jquery\", \"Oracle\", \"WinForms\", \"Compact Framework\"]\r\n        }\r\n    ]\r\n}\r\n\r\nconst allicanceGroupHolding: Job = {\r\n    company: \"Alliance Group Holding\",\r\n    location: \"Tbilisi, Georgia\",\r\n    projects: [\r\n        {\r\n            period: { dateFrom: new Date(2013, 7, 1), dateTo: new Date(2013, 10, 1) },\r\n            role: \".Net Developer\",\r\n            stack: []\r\n        }\r\n    ]\r\n}\r\n\r\nconst ibs: Job = {\r\n    company: \"Integrated Business Solutions\",\r\n    location: \"Tbilisi, Georgia\",\r\n    projects: [\r\n        {\r\n            period: { dateFrom: new Date(2013, 0, 1), dateTo: new Date(2013, 6, 1) },\r\n            role: \"1C Programmer\",\r\n            stack: [],\r\n        }\r\n    ]\r\n}\r\n\r\nexport const jobs: Job[] = [\r\n    topTal,\r\n    amazon,\r\n    lykke,\r\n    aurea,\r\n    altaSoftware,\r\n    georgianPost,\r\n    allicanceGroupHolding,\r\n    ibs\r\n];\r\n\r\n\r\nexport const education: Education[] = [{\r\n    period: { dateFrom: new Date(2009, 8, 1), dateTo: new Date(2014, 5, 1) },\r\n    faculty: \"Computer Science\",\r\n    degree: \"Bachelor\",\r\n    location: \"Tbilisi, Georgia\",\r\n    university: \"Tbilisi State University\"\r\n}]\r\n\r\n\r\n\r\nexport const languages: Language[] = [\r\n    { name: \"English\", listening: \"C1\", reading: \"C1\", spokenInteraction: \"C1\", spokenProduction: \"C1\", writing: \"B2\" },\r\n    { name: \"Russian\", listening: \"C1\", reading: \"C1\", spokenInteraction: \"B2\", spokenProduction: \"B2\", writing: \"B2\" },\r\n    { name: \"German\", listening: \"B1\", reading: \"B1\", spokenInteraction: \"B1\", spokenProduction: \"B1\", writing: \"B1\" }\r\n]\r\n\r\nexport const personalInfo: PersonalInfo = {\r\n    fullName: \"Soso Tughushi\",\r\n    position: \"Software Developer\",\r\n    address: \"Tbilisi (Georgia)\",\r\n    phoneNo: \"+995 577 777760\",\r\n    email: \"mryemama@gmail.com\",\r\n    linkedInUrl: \"https://www.linkedin.com/in/soso-tughushi-627518b5/\",\r\n    githubUrl: \"https://github.com/SosoTughushi/\",\r\n    personalWebsite: \"https://www.toptal.com/resume/soso-tughushi\",\r\n    // imageUrl: \"/images/SosoCvImage.jpg\",\r\n    imageUrl: window.location.origin + \"/cv-maker/images/SosoCvImage.jpg\",\r\n    summary: <>I am .Net stack based Software Developer with 8+ years of work experience, with big passion for programming, well\r\n        organized, friendly, creative, highly motivated, with great curiousity and creativity, always up for challanges, always striving\r\n        for excellence and self improvement.</>,\r\n};\r\n\r\nexport const skills: Skill[] = [\r\n    {\r\n        skill: <>Fluent in <b>C#</b>.</>\r\n    }, {\r\n        skill: <>Experience in using following <b>.NET libraries</b>:</>,\r\n        subskills: [\r\n            <b>Linq</b>,\r\n            <b>System.Reflection</b>,\r\n            <b>Expression Trees</b>,\r\n            <b>System Reactive</b>,\r\n            <b>ASP.NET MVC</b>,\r\n            <b>ASP.NET CORE MVC</b>,\r\n            <b>Razor</b>,\r\n            <b>ADO.NET</b>,\r\n            <b>Entity Framework</b>,\r\n            <b>StructureMap</b>,\r\n            <b>Xunit</b>,\r\n            <b>NSubstitute</b>,\r\n            <b>Moq</b>,\r\n            \"SignalR\",\r\n            \"and many more\"\r\n        ]\r\n    },\r\n    {\r\n        skill: <>Good understanding of <b>SOLID</b> principles and <b>Design Patterns</b>.</>\r\n    }, {\r\n        skill: <>Familiar with <b>Functional Programming</b> approaches.</>\r\n    }, {\r\n        skill: <>Experience writing <b>Front End</b> with:</>,\r\n        subskills: [\r\n            <b>React.js</b>,\r\n            <b>Typescript</b>,\r\n            <b>Redux</b>,\r\n            <b>sass</b>,\r\n            <b>jQuery</b>,\r\n            \"razor\"\r\n        ]\r\n    }, {\r\n        skill: <>Good knowledge of following <b>Message Brokers</b>:</>,\r\n        subskills: [\r\n            <b>Apache Kafka</b>,\r\n            <b>RabbitMq</b>,\r\n            <><b>AWS SQS</b> (Standard Queues)</>,\r\n        ]\r\n    },\r\n    {\r\n        skill: <>Experienced writing <b>automated tests</b> (unit, integration,\r\n            acceptance).</>\r\n    },\r\n    {\r\n        skill: <>Experienced in <b>designing</b> and working with <b>distributed</b>, \r\n            <b> scalable</b> and fault tolerant systems with high availability, high throughput and\r\n            low latency.</>\r\n    },\r\n    {\r\n        skill: <>Good understanding of <b>Event Sourcing</b> and <b>CQRS</b>.</>\r\n    },\r\n    {\r\n        skill: <>Good understanding and experience designing systems with <b>Streaming Architecture</b>.</>\r\n    },\r\n    {\r\n        skill: <>Experience working with following databases:</>,\r\n        subskills: [\r\n            \"MsSql\",\r\n            \"PostgreSql\",\r\n            \"MongoDb\",\r\n            \"DynamoDb\",\r\n            \"Redis\",\r\n            \"Elasticsearch\",\r\n            \"Azure Table Storage\"\r\n        ]\r\n    },\r\n    {\r\n        skill: <>Experience working with <b>Docker</b>.</>\r\n    },\r\n    {\r\n        skill: <>Experience working with <b>TeamCity</b>.</>\r\n    }, {\r\n        skill: <>Highly motivated, creative, open minded, friendly and helpful person\r\n            with big passion for software development.</>\r\n    }\r\n]\r\n\r\n// <></>","import Skill from \"../../cv/skill\";\r\n\r\nexport default function SkillComponent({ skill }: SkillProps) {\r\n    return <div className=\"skill\">\r\n        {skill.skill}\r\n        {skill.subskills && <div className=\"subskills\">\r\n            {skill.subskills.map(subskill => <div className=\"subskill\">* {subskill}</div>)}\r\n        </div>}\r\n\r\n    </div>\r\n}\r\n\r\ninterface SkillProps {\r\n    skill: Skill;\r\n}","import Skill from \"../../cv/skill\";\r\nimport Section from \"../Section\";\r\nimport SkillComponent from \"./Skill\";\r\nimport \"./Skills.scss\";\r\n\r\nexport default function SkillList({ skills }: SkillListProps) {\r\n    return <div className=\"skills\">\r\n        <Section title=\"Job Related Skills\">\r\n            <div className=\"skills-content\">\r\n                {skills.map(skill => <div className=\"skill-item\"><SkillComponent skill={skill} /></div>)}\r\n            </div>\r\n        </Section>\r\n    </div>\r\n}\r\n\r\ninterface SkillListProps {\r\n    skills: Skill[]\r\n}","import { Education } from \"../../cv/education\";\r\nimport { Job } from \"../../cv/job\";\r\nimport Jobs from \"../Jobs\";\r\nimport { Language } from \"../../cv/language\";\r\nimport \"./CvComponent.scss\";\r\nimport Languages from \"../Languages\";\r\nimport EducationComponent from \"../Education\";\r\nimport PersonalInfoComponent from \"../PersonalInfo\";\r\nimport PersonalInfo from \"../../cv/personalInfo\";\r\nimport Skill from \"../../cv/skill\";\r\nimport { skills } from \"../../cv/Soso\";\r\nimport SkillList from \"../Skills\";\r\nimport { useEffect } from \"react\";\r\nexport default function CvComponent({ personalInfo,jobs, education, languages }: CvComponentProps) {\r\n    useEffect(()=> {\r\n        document.title=personalInfo.fullName;\r\n    });\r\n    return <div className=\"cv-component\">\r\n        <PersonalInfoComponent personalInfo={personalInfo} />\r\n        <SkillList skills={skills} />\r\n        <EducationComponent education={education} />\r\n        <Languages languages={languages} />\r\n        <Jobs jobs={jobs} />\r\n    </div>\r\n}\r\n\r\n\r\n\r\ninterface CvComponentProps {\r\n    personalInfo: PersonalInfo,\r\n    skills: Skill[],\r\n    education: Education[],\r\n    jobs: Job[],\r\n    languages: Language[],\r\n}","import './App.scss';\r\nimport CvComponent from '../CvComponent';\r\nimport * as soso from \"../../cv/Soso\";\r\nimport { useState } from 'react';\r\nimport ControlPanel from '../ControlPanel';\r\n\r\nfunction App() {\r\n  const [theme, setTheme] = useState<Theme>(\"dark\");\r\n  return (\r\n    <div className={\"App theme-\" + theme}>\r\n      {/* <ControlPanel theme={theme} onThemeChanged={setTheme} /> */}\r\n      <CvComponent education={soso.education} jobs={soso.jobs} languages={soso.languages} personalInfo={soso.personalInfo} skills={soso.skills} />\r\n    </div>\r\n  );\r\n}\r\n\r\ntype Theme = \"light\" | \"dark\";\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}